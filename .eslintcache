[{"D:\\building an amazone clone\\amazon-clone\\src\\reportWebVitals.js":"1","D:\\building an amazone clone\\amazon-clone\\src\\App.js":"2","D:\\building an amazone clone\\amazon-clone\\src\\Header.js":"3","D:\\building an amazone clone\\amazon-clone\\src\\index.js":"4","D:\\building an amazone clone\\amazon-clone\\src\\Home.js":"5","D:\\building an amazone clone\\amazon-clone\\src\\Product.js":"6","D:\\building an amazone clone\\amazon-clone\\src\\Checkout.js":"7","D:\\building an amazone clone\\amazon-clone\\src\\Subtotal.js":"8","D:\\building an amazone clone\\amazon-clone\\src\\Reducer.js":"9","D:\\building an amazone clone\\amazon-clone\\src\\StateProvider.js":"10","D:\\building an amazone clone\\amazon-clone\\src\\reducer.js":"11","D:\\building an amazone clone\\amazon-clone\\src\\CheckoutProduct.js":"12","D:\\building an amazone clone\\amazon-clone\\src\\Login.js":"13","D:\\building an amazone clone\\amazon-clone\\src\\firebase.js":"14","D:\\building an amazone clone\\amazon-clone\\src\\SignUp.js":"15","D:\\building an amazone clone\\amazon-clone\\src\\Payment.js":"16","D:\\building an amazone clone\\amazon-clone\\src\\axios.js":"17","D:\\building an amazone clone\\amazon-clone\\src\\Orders.js":"18","D:\\building an amazone clone\\amazon-clone\\src\\Order.js":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":3373,"mtime":1609095098101,"results":"22","hashOfConfig":"21"},{"size":2866,"mtime":1608932924122,"results":"23","hashOfConfig":"21"},{"size":720,"mtime":1609106361923,"results":"24","hashOfConfig":"21"},{"size":3059,"mtime":1608918232562,"results":"25","hashOfConfig":"21"},{"size":1103,"mtime":1607628191562,"results":"26","hashOfConfig":"21"},{"size":1202,"mtime":1608290935767,"results":"27","hashOfConfig":"21"},{"size":1145,"mtime":1608778260587,"results":"28","hashOfConfig":"21"},{"size":318,"mtime":1607120626418,"results":"29","hashOfConfig":"21"},{"size":502,"mtime":1607120901116,"results":"30","hashOfConfig":"21"},{"size":1735,"mtime":1608941007344,"results":"31","hashOfConfig":"21"},{"size":1413,"mtime":1608932657218,"results":"32","hashOfConfig":"21"},{"size":1937,"mtime":1608940996295,"results":"33","hashOfConfig":"21"},{"size":797,"mtime":1607630943642,"results":"34","hashOfConfig":"21"},{"size":2415,"mtime":1607632894144,"results":"35","hashOfConfig":"21"},{"size":7880,"mtime":1609105847744,"results":"36","hashOfConfig":"21"},{"size":195,"mtime":1608939770470,"results":"37","hashOfConfig":"21"},{"size":1194,"mtime":1608933213694,"results":"38","hashOfConfig":"21"},{"size":1327,"mtime":1609105291411,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1gph42",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\building an amazone clone\\amazon-clone\\src\\reportWebVitals.js",[],["92","93"],"D:\\building an amazone clone\\amazon-clone\\src\\App.js",["94","95"],"import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\n// components\r\nimport Header from \"./Header\";\r\nimport Home from \"./Home\";\r\nimport Checkout from \"./Checkout\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\nimport Payment from \"./Payment\";\r\nimport Orders from \"./Orders\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n//functions\r\nimport { auth } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nconst promise = loadStripe(\r\n    \"pk_test_51I1jKvEZ6hfegs2uaEv5BLZfSfXBdNs5DOsqTZfCw5W8EI4357IctQcP4HfMIwCZ7BQslLFiKgifnKmJm40L3fVy00CAQ3ymEl\"\r\n);\r\n\r\nfunction App() {\r\n    const [{}, disaptch] = useStateValue();\r\n    useEffect(\r\n        // this will only run when the app compnent runs..\r\n        () => {\r\n            // this mean is like an event listener, it is lestining to the changes in the authentication state PS: its state is in firebase, not in this code\r\n            auth.onAuthStateChanged((authUser) => {\r\n                if (authUser) {\r\n                    // the user just looged in or the use was logger in\r\n                    disaptch({\r\n                        type: \"SET_USER\",\r\n                        user: authUser,\r\n                    });\r\n                } else {\r\n                    // the user is logged out\r\n                    disaptch({\r\n                        type: \"SET_USER\",\r\n                        user: null,\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        //if you put some variables in this array, the use effect will run each time they change. but if you left it empty, the use effect will run just a single time when the app loads\r\n        []\r\n    );\r\n    /* it is more like saying the variables in the array are affecting the app component, so everytime something change them, they are affected, and so the app component should be affected by that changes too, so he will reload and the function parameter should run again */\r\n    return (\r\n        // BEM\r\n        <Router>\r\n            <div className=\"App\">\r\n                {/* the switch component will help as rout around a lot of pages */}\r\n                <Switch>\r\n                    <Route path=\"/orders\">\r\n                        <Header />\r\n                        <Orders />\r\n                    </Route>\r\n                    <Route path=\"/signup\">\r\n                        <SignUp />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    {/* the checkout rout */}\r\n                    <Route path=\"/checkout\">\r\n                        <Header />\r\n                        <Checkout />\r\n                    </Route>\r\n                    <Route path=\"/payment\">\r\n                        <Header />\r\n                        <Elements stripe={promise}>\r\n                            <Payment />\r\n                        </Elements>\r\n                    </Route>\r\n                    {/* the main home route */}\r\n                    <Route path=\"/\">\r\n                        <Header />\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\building an amazone clone\\amazon-clone\\src\\Header.js",["96"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Header() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n    const handleAuthentication = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\">\r\n                <img\r\n                    alt=\"amazon logo\"\r\n                    className=\"header__logo\"\r\n                    src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\r\n                />\r\n            </Link>\r\n            <div className=\"header__search\">\r\n                <input className=\"header__searchInput\" type=\"text\" />\r\n                <SearchIcon className=\"header__searchIcon\" />\r\n            </div>\r\n\r\n            <div className=\"header__nav\">\r\n                {/* the logic of this condition is that, if both expression are true, return the second one */}\r\n                <Link to={!user && \"/login\"}>\r\n                    <div\r\n                        onClick={handleAuthentication}\r\n                        className=\"header__option\"\r\n                    >\r\n                        <span className=\"header__optionLineOne\">\r\n                            Hello {!user ? \"Guest\" : user.displayName}\r\n                        </span>\r\n                        <span className=\"header__optionLineTwo\">\r\n                            {user ? \"Sign Out\" : \"Sign In\"}\r\n                        </span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <Link to=\"/orders\">\r\n                    <div className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">Return</span>\r\n                        <span className=\"header__optionLineTwo\">& Orders</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">Your</span>\r\n                    <span className=\"header__optionLineTwo\">Prime</span>\r\n                </div>\r\n\r\n                <Link to=\"/checkout\">\r\n                    <div className=\"header__optionBasket\">\r\n                        <ShoppingBasketIcon />\r\n                        <span className=\"header__optionLineTwo header__basketCount\">\r\n                            {/* the '?' mark mean that if for any reason the basket is not working don't freak out and handle the error gracefully */}\r\n                            {basket?.length}\r\n                        </span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","D:\\building an amazone clone\\amazon-clone\\src\\index.js",[],"D:\\building an amazone clone\\amazon-clone\\src\\Home.js",[],["97","98"],"D:\\building an amazone clone\\amazon-clone\\src\\Product.js",["99","100"],"import React from \"react\";\r\nimport \"./Product.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n  const [{ basket }, dispatch] = useStateValue();\r\n\r\n  const addToBasket = () => {\r\n    //dispatch the action \"ADD_TO_BASKET\" with some additional data about the item\r\n    dispatch({\r\n      type: \"ADD_TO_BASKET\",\r\n      item: {\r\n        id: id,\r\n        title: title,\r\n        image: image,\r\n        price: price,\r\n        rating: rating,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__info\">\r\n        <p>{title}</p>\r\n        <p className=\"product__price\">\r\n          <small>$</small>\r\n          <strong>{price}</strong>\r\n        </p>\r\n\r\n        <div className=\"product__rating\">\r\n          {Array(rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <p>⭐</p>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <img src={image} alt=\"product image\" />\r\n      <button onClick={addToBasket}>Add to Basket</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n",["101","102"],"D:\\building an amazone clone\\amazon-clone\\src\\Checkout.js",["103","104"],"import React from \"react\";\r\nimport \"./Checkout.css\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Subtotal from \"./Subtotal\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Checkout() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"checkout\">\r\n      <div className=\"checkout__left\">\r\n        <img\r\n          className=\"checkout__ad\"\r\n          src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\r\n          atl=\"banner\"\r\n        />\r\n\r\n        <div>\r\n          <h3>Hello, {user?.email}</h3>\r\n          <h2 className=\"checkout__title\">Your shopping basket</h2>\r\n          {basket.map((item) => (\r\n            <FlipMove>\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            </FlipMove>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"checkout__left\">\r\n        <Subtotal />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n",["105","106"],"D:\\building an amazone clone\\amazon-clone\\src\\Subtotal.js",["107"],"import React from \"react\";\r\nimport \"./Subtotal.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nfunction Subtotal() {\r\n  const history = useHistory();\r\n  const [{ basket }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"subtotal\">\r\n      <CurrencyFormat\r\n        renderText={(value) => (\r\n          <>\r\n            <p>\r\n              {/* part of the homework */}\r\n              Subtotal ({basket.length} items):\r\n              <strong>{value}</strong>\r\n            </p>\r\n            <small className=\"subtotal__gift\">\r\n              <input type=\"checkbox\" /> This order contains a gift\r\n            </small>\r\n          </>\r\n        )}\r\n        decimalScale={2}\r\n        value={getBasketTotal(basket)} //part of homework\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n\r\n      <button onClick={(e) => history.push(\"/payment\")}>\r\n        proceed to Checkout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subtotal;\r\n",["108","109"],"D:\\building an amazone clone\\amazon-clone\\src\\Reducer.js",[],"D:\\building an amazone clone\\amazon-clone\\src\\StateProvider.js",[],"D:\\building an amazone clone\\amazon-clone\\src\\reducer.js",[],"D:\\building an amazone clone\\amazon-clone\\src\\CheckoutProduct.js",["110","111"],"import React from \"react\";\r\nimport \"./CheckoutProduct.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\r\n    const [{ basket }, dispatch] = useStateValue();\r\n\r\n    const removeFromBasket = (e) => {\r\n        dispatch({\r\n            type: \"REMOVE_FROM_BASKET\",\r\n            id: id,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img\r\n                className=\"checkoutProduct__image\"\r\n                src={image}\r\n                alt=\"the item image\"\r\n            />\r\n            <div className=\"checkoutProduct__info\">\r\n                <p className=\"checkoutProduct__title\">{title}</p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutProduct__rating\">\r\n                    {Array(rating)\r\n                        .fill()\r\n                        .map((_, i) => (\r\n                            <p>⭐</p>\r\n                        ))}\r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromBasket}>\r\n                        Remove from Basket\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckoutProduct;\r\n","D:\\building an amazone clone\\amazon-clone\\src\\Login.js",["112"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    //some fancy firebase sign-in shit.\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <Link to=\"/\">\r\n        <img\r\n          className=\"login__logo\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\"\r\n          alt=\"amazon logo image\"\r\n        />\r\n      </Link>\r\n\r\n      <div className=\"login__container\">\r\n        <h1>Sign-In</h1>\r\n        <form>\r\n          <h5>E-mail</h5>\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <h5>password</h5>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <button\r\n            className=\"login__signInButton\"\r\n            type=\"submit\"\r\n            onClick={signIn}\r\n          >\r\n            Sign In\r\n          </button>\r\n        </form>\r\n\r\n        <p>\r\n          By signing-in you agree to the AMAZON FAKE CLONE's Conditions of Use &\r\n          Sale. Please see our Privacy Notice, our Cookies Notice and our\r\n          Interest-Based Ads\r\n        </p>\r\n        <Link to=\"/signup\">\r\n          <button className=\"login__registerButton\">\r\n            Create your Amazon Account\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","D:\\building an amazone clone\\amazon-clone\\src\\firebase.js",[],["113","114"],"D:\\building an amazone clone\\amazon-clone\\src\\SignUp.js",[],"D:\\building an amazone clone\\amazon-clone\\src\\Payment.js",["115","116","117","118","119","120","121"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from \"./axios\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    // this is the \r\n    /* useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: \"POST\",\r\n                // stripe the total in a currencies subunits\r\n                url: `/payment/create?total=${getBasketTotal(basket) * 100}`,\r\n            });\r\n            setClientSecret(response.data.clientSecret);\r\n        };\r\n\r\n        getClientSecret();\r\n    }, [basket]); */\r\n\r\n    // this is the true submit handler that should handle charging the client, but since this is just a testing project, i will use a fake handler below that will just simulate the stripe functionality, then add the orders to the firestore database \r\n    /* const handleSubmit = async (event) => {\r\n        // do all the fancy stripe stuff\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe\r\n            .confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement),\r\n                },\r\n            })\r\n            .then(({ paymentIntent }) => {\r\n                // paymentIntent = payment confirmation\r\n\r\n                db.collection(\"users\")\r\n                    .doc(user?.uid)\r\n                    .collection(\"orders\")\r\n                    .doc(paymentIntent.id)\r\n                    .set({\r\n                        basket: basket,\r\n                        amount: paymentIntent.amount,\r\n                        created: paymentIntent.created,\r\n                    });\r\n\r\n                setSucceeded(true);\r\n                setError(null);\r\n                setProcessing(false);\r\n\r\n                dispatch({\r\n                    type: \"EMPTY_BASKET\",\r\n                });\r\n\r\n                history.replace(\"/orders\");\r\n            });\r\n    }; */\r\n\r\n    // this just a fake handler that should simulate the stripe fuctionality and add the orders to the database\r\n    const handleSubmit = async (event) => {\r\n        // do all the fancy stripe stuff\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = new Promise((res, rej) => {\r\n            res({\r\n                amount: getBasketTotal(basket),\r\n                created: new Date(),\r\n            });\r\n        }).then((paymentIntent) => {\r\n            // paymentIntent = payment confirmation\r\n\r\n            db.collection(\"users\")\r\n                .doc(user?.uid)\r\n                .collection(\"orders\")\r\n                .add({\r\n                    basket: basket,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created,\r\n                })\r\n                .then(() => console.log(\"orders have been added succesfully\"))\r\n                .catch((err) => console.log(err));\r\n\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            dispatch({\r\n                type: \"EMPTY_BASKET\",\r\n            });\r\n\r\n            history.replace(\"/orders\");\r\n        });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        // listen for changes inside the card element\r\n        // and display any error as the costumer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment__container\">\r\n                <h1>\r\n                    Checkout (<Link to=\"checkout\">{basket?.length} items</Link>)\r\n                </h1>\r\n\r\n                {/* payment section - delivery adress */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Adress</h3>\r\n                    </div>\r\n\r\n                    <div className=\"payment__adress\">\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Los Angeles, CA</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* payment section - Review Items */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n\r\n                    <div className=\"payment__items\">\r\n                        {basket.map((item) => (\r\n                            <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* payment section - Payment method */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n\r\n                    <div className=\"payment__details\">\r\n                        {/* Stripe magic will goes here */}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n\r\n                            <div className=\"payment__priceContainer\">\r\n                                <CurrencyFormat\r\n                                    renderText={(value) => (\r\n                                        <h3>Order Total: {value}</h3>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n                                <button\r\n                                    disabled={\r\n                                        processing || disabled || succeeded\r\n                                    }\r\n                                >\r\n                                    <span>\r\n                                        {processing ? (\r\n                                            <p>Processing</p>\r\n                                        ) : (\r\n                                            \"Buy Now\"\r\n                                        )}\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* error */}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Payment;\r\n","D:\\building an amazone clone\\amazon-clone\\src\\axios.js",[],"D:\\building an amazone clone\\amazon-clone\\src\\Orders.js",["122","123","124"],"D:\\building an amazone clone\\amazon-clone\\src\\Order.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":23,"column":12,"nodeType":"131","messageId":"132","endLine":23,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":45,"column":9,"nodeType":"135","endLine":45,"endColumn":11,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":10,"column":30,"nodeType":"139","messageId":"140","endLine":10,"endColumn":38},{"ruleId":"125","replacedBy":"141"},{"ruleId":"127","replacedBy":"142"},{"ruleId":"137","severity":1,"message":"143","line":6,"column":12,"nodeType":"139","messageId":"140","endLine":6,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":39,"column":7,"nodeType":"146","endLine":39,"endColumn":46},{"ruleId":"125","replacedBy":"147"},{"ruleId":"127","replacedBy":"148"},{"ruleId":"137","severity":1,"message":"138","line":9,"column":28,"nodeType":"139","messageId":"140","endLine":9,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":13,"column":9,"nodeType":"146","endLine":17,"endColumn":11},{"ruleId":"125","replacedBy":"151"},{"ruleId":"127","replacedBy":"152"},{"ruleId":"137","severity":1,"message":"138","line":10,"column":22,"nodeType":"139","messageId":"140","endLine":10,"endColumn":30},{"ruleId":"125","replacedBy":"153"},{"ruleId":"127","replacedBy":"154"},{"ruleId":"137","severity":1,"message":"143","line":6,"column":14,"nodeType":"139","messageId":"140","endLine":6,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":17,"column":13,"nodeType":"146","endLine":21,"endColumn":15},{"ruleId":"144","severity":1,"message":"145","line":27,"column":9,"nodeType":"146","endLine":31,"endColumn":11},{"ruleId":"125","replacedBy":"155"},{"ruleId":"127","replacedBy":"156"},{"ruleId":"137","severity":1,"message":"157","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"158","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":13},{"ruleId":"137","severity":1,"message":"159","line":17,"column":11,"nodeType":"139","messageId":"140","endLine":17,"endColumn":17},{"ruleId":"137","severity":1,"message":"160","line":18,"column":11,"nodeType":"139","messageId":"140","endLine":18,"endColumn":19},{"ruleId":"137","severity":1,"message":"161","line":24,"column":12,"nodeType":"139","messageId":"140","endLine":24,"endColumn":24},{"ruleId":"137","severity":1,"message":"162","line":24,"column":26,"nodeType":"139","messageId":"140","endLine":24,"endColumn":41},{"ruleId":"137","severity":1,"message":"163","line":85,"column":15,"nodeType":"139","messageId":"140","endLine":85,"endColumn":22},{"ruleId":"137","severity":1,"message":"143","line":9,"column":14,"nodeType":"139","messageId":"140","endLine":9,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":9,"column":30,"nodeType":"139","messageId":"140","endLine":9,"endColumn":38},{"ruleId":"133","severity":1,"message":"164","line":28,"column":8,"nodeType":"135","endLine":28,"endColumn":10,"suggestions":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'disaptch'. Either include it or remove the dependency array.","ArrayExpression",["168"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["166"],["167"],"'basket' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["166"],["167"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["166"],["167"],["166"],["167"],["166"],["167"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'stripe' is assigned a value but never used.","'elements' is assigned a value but never used.","'clientSecret' is assigned a value but never used.","'setClientSecret' is assigned a value but never used.","'payload' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [disaptch]",{"range":"174","text":"175"},"Update the dependencies array to be: [user]",{"range":"176","text":"177"},[1800,1802],"[disaptch]",[877,879],"[user]"]